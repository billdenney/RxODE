The next type of event is an infusion; There are two ways to specify
an infusion; The first is the `dur` keyword.

An example of this is:

```{r}
ev <- et(timeUnits="hr") %>%
    et(amt=10000, ii=12,until=24, dur=8) %>%
    et(seq(0, 24, length.out=100))

ev
```

```{r}
rxSolve(m1, ev) %>% plot(depot, C2) +
    xlab("Time")
```

It can be also specified by the `rate` component:

```{r}
ev <- et(timeUnits="hr") %>%
    et(amt=10000, ii=12,until=24, rate=10000/8) %>%
    et(seq(0, 24, length.out=100))

ev
```

```{r}
rxSolve(m1, ev) %>% plot(depot, C2) +
    xlab("Time")
```

These are the same with the exception of how bioavailability changes
the infusion.

In the case of modeling `rate`, a bioavailability decrease,
decreases the infusion duration, as in NONMEM. For example:

```{r}
rxSolve(m1, ev, c(fdepot=0.25)) %>% plot(depot, C2) +
    xlab("Time")
```

Similarly increasing the bioavailability increases the infusion duration. 

```{r}
rxSolve(m1, ev, c(fdepot=1.25)) %>% plot(depot, C2) +
    xlab("Time")
```

The rationale for this behavior is that the `rate` and `amt` are
specified by the event table, so the only thing that can change with a
bioavailability increase is the duration of the infusion.

If you specify the `amt` and `dur` components in the event table,
bioavailability changes affect the `rate` of infusion.

```{r}
ev <- et(timeUnits="hr") %>%
    et(amt=10000, ii=12,until=24, dur=8) %>%
    et(seq(0, 24, length.out=100))

```

You can see the side-by-side comparison of bioavailability changes
affecting `rate` instead of duration with these records in the
following plots:

```{r}
library(ggplot2)
library(patchwork)

p1 <- rxSolve(m1, ev, c(fdepot=1.25)) %>% plot(depot) +
    xlab("Time") + ylim(0,5000)

p2 <- rxSolve(m1, ev, c(fdepot=0.25)) %>% plot(depot) +
    xlab("Time")+ ylim(0,5000)

## Use patchwork syntax to combine plots
p1 * p2
```
